{"version":3,"sources":["images/pagenotfound.png","context.js","components/Contact.js","components/Contacts.js","components/AddContact.js","components/Header.js","pages/About.js","components/EditContact.js","pages/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","res","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onToggleContact","onDeleteContact","delete","name","email","phone","className","onClick","to","Contacts","key","AddContact","errors","onInputChanged","event","target","onFormSubmit","preventDefault","length","RegExp","test","post","history","push","onSubmit","e","noValidate","htmlFor","classnames","placeholder","onChange","Header","branding","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","About","EditContact","onInputEdit","a","match","params","userId","put","user","PageNotFound","src","PageErrorImage","alt","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,0C,6OCGrCC,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAO,eACAF,EADP,CAEIG,SAAUH,EAAMG,SAASC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,EAAOM,aAEzE,IAAK,cACD,OAAO,eACAP,EADP,CAEIG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAE5C,IAAK,iBACD,OAAO,eACAH,EADP,CAEIG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OAAIA,EAAQC,KAAOL,EAAOM,QAAQD,GAClED,EAAUJ,EAAOM,QACjBF,OAEZ,QACI,OAAOL,IAINS,EAAb,4MACIT,MAAQ,CACJG,SAAU,GACVO,SAAU,SAAAT,GACN,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAOC,QAJlD,kEAQ0B,IAAD,OACjBW,IAAMC,IAAI,8CACTC,MAAK,SAAAC,GACF,EAAKJ,SAAS,CAACR,SAAUY,EAAIC,YAXzC,+BAgBQ,OACI,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOC,KAAKlB,OACzBkB,KAAKC,MAAMC,cAlB5B,GAA8BC,aAwBjBC,EAAW1B,EAAQ0B,SCiBjBC,G,wNA/DXvB,MAAQ,CACJwB,iBAAiB,G,EAGrBC,gBAAkB,WACd,EAAKd,SAAS,CACVa,iBAAkB,EAAKxB,MAAMwB,mB,EAIrCE,gBAAkB,SAACpB,EAAII,GACnB,IAAIT,EAAS,CACTC,KAAM,iBACNK,QAASD,GAEbM,IAAMe,OAAN,qDAA2DrB,IAC1DQ,MAAK,SAAAC,GAAG,OAAIL,EAAST,O,qDAGnBkB,GAAQ,IAAD,SACuBD,KAAKC,MAA/BS,EADG,EACHA,KAAMC,EADH,EACGA,MAAOC,EADV,EACUA,MAAOxB,EADjB,EACiBA,GAC3B,OACI,kBAACgB,EAAD,MACK,SAAAL,GAAU,IACAP,EAAYO,EAAZP,SACP,OACA,yBAAKqB,UAAU,uBACf,4BACKH,EACC,EAAK5B,MAAMwB,gBAEN,uBAAGQ,QAAS,EAAKP,gBAAiBM,UAAU,wBAD9C,uBAAGC,QAAS,EAAKP,gBAAiBM,UAAU,yBAGjD,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAME,GAAE,qBAAgB3B,IAAM,uBAAGyB,UAAU,qCAC3C,uBAAGA,UAAU,2BACTC,QAAS,kBAAM,EAAKN,gBAAgBpB,EAAII,QAKnD,EAAKV,MAAMwB,gBACR,wBAAIO,UAAU,cACV,wBAAIA,UAAU,mBAAd,UAAwCF,GACxC,wBAAIE,UAAU,mBAAd,UAAwCD,IAE5C,a,GA/CFT,cC0BPa,E,uKAzBP,OACI,kBAACZ,EAAD,MACK,SAAAL,GAAU,IACAd,EAAYc,EAAZd,SACP,OACI,oCACA,wBAAI4B,UAAU,kBAAiB,0BAAMA,UAAU,eAAhB,YAA/B,QAEI5B,EAASK,KAAI,SAAAH,GAAO,OAChB,kBAAC,EAAD,CACI8B,IAAK9B,EAAQC,GACbA,GAAID,EAAQC,GACZsB,KAAMvB,EAAQuB,KACdC,MAAOxB,EAAQwB,MACfC,MAAOzB,EAAQyB,mB,GAhB5BT,a,yBCgIRe,E,4MA9HXpC,MAAQ,CACJ4B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPO,OAAQ,I,EAGZC,eAAiB,SAAAC,GACb,EAAK5B,SAAL,eACK4B,EAAMC,OAAOZ,KAAOW,EAAMC,OAAOvB,S,EAI1CwB,aAAe,SAACF,EAAO7B,GACnB6B,EAAMG,iBAD0B,MAEF,EAAK1C,MAA5B4B,EAFyB,EAEzBA,KAAMC,EAFmB,EAEnBA,MAAOC,EAFY,EAEZA,MAGpB,GAAY,OAATF,GAA0B,KAATA,GAAeA,EAAKe,OAAS,EAC7C,EAAKhC,SAAS,CACV0B,OAAQ,CACJT,KAAM,kEAKlB,GAAa,OAAVC,GAA4B,KAAVA,EAArB,CASA,GAAa,OAAVA,GAA4B,KAAVA,EAEjB,IADc,IAAIe,OAAO,wEACbC,KAAKhB,GAMb,YALA,EAAKlB,SAAS,CACV0B,OAAQ,CACJR,MAAO,wDAMvB,GAAa,OAAVC,GAA4B,KAAVA,GAAgBA,EAAMa,OAAS,GAChD,EAAKhC,SAAS,CACV0B,OAAQ,CACJP,MAAO,2CAHnB,CAQA,IAAI7B,EAAS,CACTC,KAAM,cACNK,QAAS,CACLqB,OACAC,QACAC,UAGRlB,IAAMkC,KAAK,6CAA8C7C,EAAOM,SAC/DO,MAAK,SAAAC,GAAG,OAAIL,EAASK,EAAIC,SAE1B,EAAKL,SAAS,CACViB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPO,OAAQ,KAIZ,EAAKlB,MAAM4B,QAAQC,KAAK,WA7CpB,EAAKrC,SAAS,CACV0B,OAAQ,CACJR,MAAO,oD,uDA8Cb,IAAD,SACkCX,KAAKlB,MAApC4B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOO,EADvB,EACuBA,OAC5B,OACI,kBAACf,EAAD,MACK,SAAAL,GAAU,IACCP,EAAaO,EAAbP,SACJ,OACI,yBAAKqB,UAAU,QACX,yBAAKA,UAAU,eACX,4CAEJ,yBAAKA,UAAU,aACX,0BAAMkB,SAAU,SAACC,GAAD,OAAO,EAAKT,aAAaS,EAAGxC,IAAWyC,YAAU,GAC7D,yBAAKpB,UAAU,cACX,2BAAOA,UAAU,qBAAqBqB,QAAQ,QAA9C,QACA,2BAAOrB,UAAWsB,IAAW,+BAC7B,CAAC,aAAchB,EAAOT,OAAQ1B,KAAK,OAAO0B,KAAK,OAAO0B,YAAY,gBAAgBrC,MAAOW,EAAM2B,SAAU,EAAKjB,iBAC7GD,EAAOT,MAAQ,yBAAKG,UAAU,oBAAoBM,EAAOT,OAE9D,yBAAKG,UAAU,cACX,2BAAOA,UAAU,qBAAqBqB,QAAQ,SAA9C,SACA,2BAAOrB,UAAWsB,IAAW,+BAAgC,CACzD,aAAchB,EAAOR,QACrB3B,KAAK,QAAQ0B,KAAK,QAAQ0B,YAAY,oBAAoBrC,MAAOY,EAAO0B,SAAU,EAAKjB,iBAC1FD,EAAOR,OAAS,yBAAKE,UAAU,oBAAoBM,EAAOR,OAC3D,2BAAOE,UAAU,cAAjB,4DAA8F,6BAC9F,2BAAOA,UAAU,cAAjB,qDAEJ,yBAAKA,UAAU,cACX,2BAAOA,UAAU,qBAAqBqB,QAAQ,SAA9C,SACA,2BAAOrB,UAAWsB,IAAW,+BAAgC,CACzD,aAAchB,EAAOP,QACrB5B,KAAK,OAAO0B,KAAK,QAAQ0B,YAAY,qBAAqBrC,MAAOa,EAAOyB,SAAU,EAAKjB,iBAC1FD,EAAOP,OAAS,yBAAKC,UAAU,oBAAoBM,EAAOP,OAC3D,2BAAOC,UAAU,cAAjB,8EAEJ,yBAAKA,UAAU,QACX,2BAAOA,UAAU,6CAA6C7B,KAAK,SAASe,MAAM,2B,GAlHrGI,aC6BVmC,EA/BA,SAACrC,GAAW,IACfsC,EAAatC,EAAbsC,SACR,OACI,yBAAK1B,UAAU,2DACX,yBAAKA,UAAU,aACX,uBAAG2B,KAAK,wDAAwD3B,UAAU,gBAAgB0B,GAC1F,4BAAQ1B,UAAU,iBAAiB7B,KAAK,SAASyD,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClL,0BAAMhC,UAAU,0BAGxB,yBAAKA,UAAU,2BAA2BzB,GAAG,0BACzC,wBAAIyB,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,YAAW,uBAAGA,UAAU,gBAA/C,UAEJ,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAME,GAAG,eAAeF,UAAU,YAAW,uBAAGA,UAAU,gBAA1D,SAEA,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAME,GAAG,SAASF,UAAU,YAAW,uBAAGA,UAAU,oBAApD,eCTLiC,MAZf,WACI,OACI,yBAAKjC,UAAU,aACX,wBAAIA,UAAU,aAAd,uBACA,uBAAGA,UAAU,QAAb,gFAGA,uBAAGA,UAAU,wBAAb,mB,yBCoIGkC,E,4MAvIXjE,MAAQ,CACJ4B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPO,OAAQ,I,EAeZ6B,YAAc,SAAChB,GACX,EAAKvC,SAAL,eACKuC,EAAEV,OAAOZ,KAAOsB,EAAEV,OAAOvB,S,EAIlCwB,a,uCAAe,WAAOS,EAAGxC,GAAV,2BAAAyD,EAAA,yDACP7D,EAAK,EAAKa,MAAMiD,MAAMC,OAAOC,OACjCpB,EAAER,iBAFS,EAImB,EAAK1C,MAA5B4B,EAJI,EAIJA,KAAMC,EAJF,EAIEA,MAAOC,EAJT,EAISA,QAGR,OAATF,GAA0B,KAATA,GAAeA,EAAKe,OAAS,GAPtC,uBAQP,EAAKhC,SAAS,CACV0B,OAAQ,CACJT,KAAM,6DAVP,6BAeE,OAAVC,GAA4B,KAAVA,EAfV,uBAiBP,EAAKlB,SAAS,CACV0B,OAAQ,CACJR,MAAO,mDAnBR,6BAwBE,OAAVA,GAA4B,KAAVA,EAxBV,oBAyBO,IAAIe,OAAO,qJACbC,KAAKhB,GA1BV,wBA2BH,EAAKlB,SAAS,CACV0B,OAAQ,CACJR,MAAO,wDA7BZ,gCAmCE,OAAVC,GAA4B,KAAVA,GAAgBA,EAAMa,OAAS,IAnCzC,wBAoCP,EAAKhC,SAAS,CACV0B,OAAQ,CACJP,MAAO,uCAtCR,4CA2COlB,IAAM2D,IAAN,qDAAwDjE,GAAM,CAC5EsB,OACAC,QACAC,UA9CO,QA2CLf,EA3CK,OAgDPd,EAAS,CACTC,KAAM,iBACNK,QAASQ,EAAIC,MAEjBN,EAAST,GAET,EAAKU,SAAS,CACViB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPO,OAAQ,KAGZ,EAAKlB,MAAM4B,QAAQC,KAAK,KA7Db,4C,gPAjBP9B,KAAKC,MAAMiD,MAAMC,O,uBACb/D,EAAKY,KAAKC,MAAMiD,MAAMC,OAAOC,O,SACd1D,IAAMC,IAAN,qDAAwDP,I,OAArEkE,E,OACNtD,KAAKP,SAAS,CACViB,KAAM4C,EAAKxD,KAAKY,KAChBC,MAAO2C,EAAKxD,KAAKa,MACjBC,MAAO0C,EAAKxD,KAAKc,Q,qIA2EnB,IAAD,SACkCZ,KAAKlB,MAApC4B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOO,EADvB,EACuBA,OAC5B,OACI,kBAACf,EAAD,MACK,SAAAL,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKqB,UAAU,QACX,wBAAIA,UAAU,eAAd,gBACA,yBAAKA,UAAU,aACX,0BAAMkB,SAAU,SAACC,GAAD,OAAO,EAAKT,aAAaS,EAAExC,IAAWyC,YAAU,GAC5D,yBAAKpB,UAAU,cACX,2BAAOA,UAAU,qBAAqBqB,QAAQ,QAA9C,QACA,2BAAOrB,UAAWsB,IAAW,+BAA+B,CACxD,aAAchB,EAAOT,OACrBA,KAAK,OAAO1B,KAAK,OAAOe,MAAOW,EAAM2B,SAAU,EAAKW,cACvD7B,EAAOT,MAAQ,yBAAKG,UAAU,oBAAoBM,EAAOT,OAE9D,yBAAKG,UAAU,cACX,2BAAOA,UAAU,qBAAqBqB,QAAQ,SAA9C,SACA,2BAAOrB,UAAWsB,IAAW,+BAA+B,CACxD,aAAchB,EAAOR,QACrBD,KAAK,QAAQ1B,KAAK,QAAQe,MAAOY,EAAO0B,SAAU,EAAKW,cAC1D7B,EAAOR,OAAS,yBAAKE,UAAU,oBAAoBM,EAAOR,QAE/D,yBAAKE,UAAU,cACX,2BAAOA,UAAU,qBAAqBqB,QAAQ,SAA9C,SACA,2BAAOrB,UAAWsB,IAAW,+BAA+B,CACxD,aAAchB,EAAOP,QACrBF,KAAK,QAAQ1B,KAAK,OAAOe,MAAOa,EAAOyB,SAAU,EAAKW,cACzD7B,EAAOP,OAAS,yBAAKC,UAAU,oBAAoBM,EAAOP,QAE/D,yBAAKC,UAAU,QACX,2BAAOA,UAAU,gDAAgD7B,KAAK,SAASe,MAAM,4B,GA3HnGI,a,iBCmBXoD,MApBf,WACI,OACI,yBAAK1C,UAAU,8DACX,yBAAKA,UAAU,aACX,yBAAK2C,IAAKC,IAAgBC,IAAI,iBAAiB7C,UAAU,+BACzD,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,kBAGA,uBAAGA,UAAU,aAAb,8CAC+C,kBAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,aAAvB,qBCwBpD8C,MAzBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAK9C,UAAU,OACb,kBAAC,EAAD,CAAQ0B,SAAW,oBACnB,yBAAK1B,UAAU,aAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IACjC,kBAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,SAASC,UAAWhB,IACtC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,eAAeC,UAAW5C,IAC5C,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,qBAAqBC,UAAWf,IAClD,kBAAC,IAAD,CAAOe,UAAWP,UCdZQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DCZNiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.355364c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pagenotfound.05761613.png\";","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return { \n                ...state,\n                contacts: [action.payload, ...state.contacts] \n            }\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (\n                    contact = action.payload\n                ) : contact)\n            }\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => {\n            this.setState(state => reducer(state, action))\n        }\n    }\n\n    componentDidMount () {\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\n        .then(res => {\n            this.setState({contacts: res.data});\n        })\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport {Consumer} from '../context';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    }\n\n    onToggleContact = () => {\n        this.setState({\n            showContactInfo: !this.state.showContactInfo\n        })\n    }\n\n    onDeleteContact = (id, dispatch) => {\n        let action = {\n            type: 'DELETE_CONTACT',\n            payload: id\n        }\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        .then(res => dispatch(action))\n    }\n\n    render(props) {\n        const {name, email, phone, id} = this.props;\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                    <div className=\"card card-body mb-3\">\n                    <h4>\n                        {name} \n                        {!this.state.showContactInfo? \n                            (<i onClick={this.onToggleContact} className=\"fas fa-chevron-right\"></i>) \n                            : (<i onClick={this.onToggleContact} className=\"fas fa-chevron-down\"></i>)\n                        }\n                        <div className=\"float-right\">\n                            <Link to={`/edit-user/${id}`}><i className=\"fas fa-user-edit text-secondary\"></i></Link>\n                            <i className=\"fas fa-times text-danger\" \n                                onClick={() => this.onDeleteContact(id, dispatch)}>\n                            </i>\n                        </div>\n                        \n                    </h4>\n                    {this.state.showContactInfo? (\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">Email: {email}</li>\n                            <li className=\"list-group-item\">Phone: {phone}</li>\n                    </ul>\n                    ) : null}\n                    \n                </div>\n                )\n                }}\n            </Consumer>\n            \n        )\n    }\n}\n\nContact.propTypes = {\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired\n}\n\nexport default Contact\n","import React, { Component } from 'react'\nimport {Consumer} from '../context'\n\nimport Contact from './Contact'\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                        <>\n                        <h1 className=\"display-5 mb-2\"><span className=\"text-danger\">Contact </span>List</h1>\n                        {\n                            contacts.map(contact => (\n                                <Contact \n                                    key={contact.id} \n                                    id={contact.id} \n                                    name={contact.name} \n                                    email={contact.email} \n                                    phone={contact.phone}/>\n                            ))\n                        }\n                        </>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport classnames from 'classnames';\n\nimport { Consumer } from './../context';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onInputChanged = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onFormSubmit = (event, dispatch) => {\n        event.preventDefault();\n        const {name, email, phone } = this.state;\n\n        // check if there is value\n        if(name === null || name === '' || name.length < 2){\n            this.setState({\n                errors: {\n                    name: \"Please enter a valid name (at least two (2) characters)\"\n                }\n            });\n            return;\n        }\n        if(email === null || email === ''){\n\n            this.setState({\n                errors: {\n                    email: \"Please enter an Email, e.g. example@email.com\"\n                }\n            });\n            return;\n        }\n        if(email !== null && email !== ''){\n            var pattern = new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n            if(!pattern.test(email)){\n                this.setState({\n                    errors: {\n                        email: \"Please enter a valid Email, e.g. example@email.com\"\n                    }\n                });\n                return;\n            }\n        }\n        if(phone === null || phone === '' || phone.length < 10){\n            this.setState({\n                errors: {\n                    phone: \"Please enter a valid phone number\"\n                }\n            });\n            return;\n        }\n        let action = {\n            type: 'ADD_CONTACT',\n            payload: {\n                name,\n                email,\n                phone\n            }\n        }\n        axios.post(\"https://jsonplaceholder.typicode.com/users\", action.payload)\n        .then(res => dispatch(res.data))\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        // redirect to home page after submitting\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                        return (\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h4>Add Contact</h4>\n                                </div>\n                                <div className='card-body'>\n                                    <form onSubmit={(e) => this.onFormSubmit(e, dispatch)} noValidate>\n                                        <div className='form-group'>\n                                            <label className=\"form-control-label\" htmlFor=\"name\">Name</label>\n                                            <input className={classnames(\"form-control form-control-md\", \n                                            {\"is-invalid\": errors.name})} type=\"text\" name=\"name\" placeholder=\"Enter name...\" value={name} onChange={this.onInputChanged} />\n                                            {errors.name && <div className=\"invalid-feedback\">{errors.name}</div>}\n                                        </div>\n                                        <div className='form-group'>\n                                            <label className=\"form-control-label\" htmlFor=\"email\">Email</label>\n                                            <input className={classnames(\"form-control form-control-md\", {\n                                                \"is-invalid\": errors.email\n                                            })} type=\"email\" name=\"email\" placeholder=\"example@email.com\" value={email} onChange={this.onInputChanged} />\n                                            {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\n                                            <small className=\"text-muted\">We will never, under any circumstances share your email.</small><br />\n                                            <small className=\"text-muted\">We take the privacy of your data very seriously.</small>\n                                        </div>\n                                        <div className='form-group'>\n                                            <label className=\"form-control-label\" htmlFor=\"phone\">Phone</label>\n                                            <input className={classnames(\"form-control form-control-md\", {\n                                                \"is-invalid\": errors.phone\n                                            })} type=\"text\" name=\"phone\" placeholder=\"Enter phone number\" value={phone} onChange={this.onInputChanged} />\n                                            {errors.phone && <div className=\"invalid-feedback\">{errors.phone}</div>}\n                                            <small className=\"text-muted\">We willnever share your phone number to anyone for any reason whatsoever.</small>\n                                        </div>\n                                        <div className='w-50'>\n                                            <input className=\"form-control btn btn-outline-danger btn-sm\" type=\"submit\" value=\"Add Contact\" />\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        )\n                    }\n                }\n        </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n    const { branding } = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"https://WilliamChavula.github.io/contactmanagerapp/#/\" className=\"navbar-brand\">{branding}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n            </div>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                    <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                    <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header\n","import React from 'react';\n\nfunction About() {\n    return (\n        <div className=\"container\">\n            <h1 className=\"display-4\">Contact Manager App</h1>\n            <p className=\"lead\">\n                Consolidate all your contacts in one place in a simple and intuitive manner.\n            </p>\n            <p className=\"small text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Consumer } from './../context';\nimport axios from 'axios';\nimport classnames from 'classnames';\n\nclass EditContact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {}\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params){\n            var id = this.props.match.params.userId;\n            const user = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n            this.setState({\n                name: user.data.name,\n                email: user.data.email,\n                phone: user.data.phone\n            });\n        }\n    }\n\n    onInputEdit = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    onFormSubmit = async (e, dispatch) => {\n        var id = this.props.match.params.userId;\n        e.preventDefault();\n\n        const {name, email, phone } = this.state;\n\n        // check if there is value\n        if(name === null || name === '' || name.length < 2){\n            this.setState({\n                errors: {\n                    name: \"Please enter a valid name (at least two (2) characters)\"\n                }\n            });\n            return;\n        }\n        if(email === null || email === ''){\n\n            this.setState({\n                errors: {\n                    email: \"Please enter an Email, e.g. example@email.com\"\n                }\n            });\n            return;\n        }\n        if(email !== null && email !== ''){\n            var pattern = new RegExp(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n            if(!pattern.test(email)){\n                this.setState({\n                    errors: {\n                        email: \"Please enter a valid Email, e.g. example@email.com\"\n                    }\n                });\n                return;\n            }\n        }\n        if(phone === null || phone === '' || phone.length < 10){\n            this.setState({\n                errors: {\n                    phone: \"Please enter a valid phone number\"\n                }\n            });\n            return;\n        }\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, {\n            name,\n            email,\n            phone\n        })\n        let action = {\n            type: 'UPDATE_CONTACT',\n            payload: res.data\n        }\n        dispatch(action);\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card\">\n                            <h1 className=\"card-header\">Edit contact</h1>\n                            <div className=\"card-body\">\n                                <form onSubmit={(e) => this.onFormSubmit(e,dispatch)} noValidate>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\" htmlFor=\"name\">Name</label>\n                                        <input className={classnames(\"form-control form-control-md\",{\n                                            \"is-invalid\": errors.name\n                                        })} name=\"name\" type=\"text\" value={name} onChange={this.onInputEdit} />\n                                        {errors.name && <div className=\"invalid-feedback\">{errors.name}</div>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\" htmlFor=\"email\">Email</label>\n                                        <input className={classnames(\"form-control form-control-md\",{\n                                            \"is-invalid\": errors.email\n                                        })} name=\"email\" type=\"email\" value={email} onChange={this.onInputEdit} />\n                                        {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-control-label\" htmlFor=\"phone\">Phone</label>\n                                        <input className={classnames(\"form-control form-control-md\",{\n                                            \"is-invalid\": errors.phone\n                                        })} name=\"phone\" type=\"text\" value={phone} onChange={this.onInputEdit} />\n                                        {errors.phone && <div className=\"invalid-feedback\">{errors.phone}</div>}\n                                    </div>\n                                    <div className='w-50'>\n                                        <input className=\"form-control btn btn-outline-secondary btn-sm\" type=\"submit\" value=\"Edit Contact\" />\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n            \n        )\n    }\n}\n\nexport default EditContact\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PageErrorImage from '../images/pagenotfound.png';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"container d-flex justify-content-center align-items-center\">\n            <div className=\"card w-50\">\n                <img src={PageErrorImage} alt=\"PageErrorImage\" className=\"img-thumbnail card-img-top\" />\n                <div className=\"card-body\">\n                    <h3 className=\"card-title\">\n                        Page not found\n                    </h3>\n                    <p className=\"card-text\">\n                        Looks like you stumbled onto a wrong path. <Link to=\"/\" className=\"card-link\">Get me Home!</Link>\n                    </p>\n                </div>\n                \n            </div>\n            \n        </div>\n    )\n}\n\nexport default PageNotFound;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport {Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Contacts from './components/Contacts';\nimport AddContact from './components/AddContact';\nimport Header from './components/Header';\nimport About from './pages/About';\nimport EditContact from './components/EditContact';\nimport PageNotFound from './pages/PageNotFound';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding = \"Contact Manager\"/>\n          <div className=\"container\">\n\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/edit-user/:userId\" component={EditContact} />\n              <Route component={PageNotFound} />\n            </Switch>\n            {/* \n            <AddContact /> */}\n          </div>\n        </div>\n      </Router>\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}